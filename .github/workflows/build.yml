name: C/C++ CI

on: 
  push:
  pull_request:

jobs:
  macos-static-build:
    runs-on: macos-11
    steps:
    - name: Install pkg-config dependency
      run: brew install pkg-config;
           export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${HOME}/prog/lib/pkgconfig
    - name: Update bash
      run: brew install bash
    - name: Fecth CoinBrew
      run: wget -nH https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew;
           chmod u+x coinbrew;
           ./coinbrew fetch Cbc@master --no-prompt
    - name: Set environment variables (for building CBC)
      run: export OSX_VERSION="11.0"; 
           export MACOSX_DEPLOYMENT_TARGET="11.0";
           export CFLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math -mmacosx-version-min=11.0 -static";
           export CXXFLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math -std=c++11 -stdlib=libc++ -mmacosx-version-min=11.0 -static";
           export F77FLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math"; export LDFLAGS="-fPIC -O3 -DNDEBUG -ffast-math";
           export DYLD_LIBRARY_PATH="${HOME}/prog/lib:${DYLD_LIBRARY_PATH}";
    - name: Build static CBC using CoinBrew
      run: sudo ./coinbrew build --prefix=${HOME}/prog Cbc@master 
                                 --without-asl --without-mumps 
                                 --disable-shared --enable-static --enable-cbc-parallel 
                                 --no-prompt --verbosity=4 --parallel-jobs=2 --tests none
    - name: Build shared library for C Interface
      run: ls ${HOME}/prog/lib ; sudo clang++ -shared ${CXXFLAGS} -o ${HOME}/prog/lib/cbc-c-darwin-x86-64.dylib
                        -I${HOME}/prog/include/coin-or/ -I${HOME}/prog/include/coin/ -L${HOME}/prog/lib
                        ./Cbc/src/Cbc_C_Interface.cpp
                        -lCbc -lCgl -lOsiClp -lClp -lOsi -lCoinUtils -lOsiCbc
                        -lbz2 -lz -llapack -lreadline -lm
    # - uses: actions/upload-artifact@v2
    #   with:build Cbc@master --prefix=
    #     name: cbc-darwin-x86-64
    #     path: /Users/runner/prog
    - uses: actions/upload-artifact@v2
      with:
        name: cbc-c-darwin-x86-64
        path: /Users/runner/prog/lib/cbc-c-darwin-x86-64.dylib

  ubuntu-20-build-release:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout coinbrew
      uses: actions/checkout@v3
      with:
        repository: coin-or/coinbrew
        path: coinbrew
    - name: Build project
      run: |
        sudo apt-get install -y zlib1g-dev libnauty2-dev gfortran liblapack-dev libmetis-dev libnauty2-dev pkg-config gfortran pkg-config build-essential
        bash coinbrew/coinbrew build Cbc@master --prefix=${HOME}/prog/  --enable-relocatable --tests none --verbosity 2
        ls ${HOME}/prog/lib/
    - name: Zip libraries
      run: |
        zip ${HOME}/cbc-ubuntu-20.zip ${HOME}/prog/lib/* ${HOME}/prog/bin/*
    - uses: actions/upload-artifact@v2
      with:
        name: cbc-ubuntu-20
        path: /home/runner/cbc-ubuntu-20.zip 

  windows-build:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git base-devel gcc mingw-w64-x86_64-winpthreads-git mingw-w64-x86_64-toolchain mingw-w64-x86_64-ntldd tar mingw-w64-x86_64-gcc-fortran
      - name: create install dir
        run: mkdir -p /d/a/prog/ ; mkdir -p /d/a/prog/include ; mkdir -p /d/a/prog/lib
      - name: copy pthread static
        run: cp /mingw64/lib/libwinpthread.a /d/a/prog/lib
      - name: install nauty
        run: cd deps/nauty ; export CFLAGS="-O3 -fPIC -flto" ; export LDFLAGS="-O3 -fPIC -flto" ; 
             export IDIR=/d/a/prog/ ;
             ./configure --host=x86_64-w64-mingw32 --prefix=$IDIR --enable-static --disable-shared --enable-generic ; 
             make -j 2 ; mkdir -p /d/a/prog/include/nauty ;
             cp *.h /d/a/prog/include/nauty/ ; cp *.a /d/a/prog/lib/ ; cp nauty.a /d/a/prog/lib/libnauty.a ; cd ../../
      - name: build zlib
        run:  cd deps/zlib/zlib-1.2.11/ ; export CFLAGS="-O3 -fPIC -flto" ; export LDFLAGS="-O3 -fPIC -flto" ;
              export IDIR=/d/a/prog/ ; 
              make -f win32/Makefile.gcc -j 2 ; find ./ | grep libz.a ; 
              export INCLUDE_PATH=${IDIR}/include ;export LIBRARY_PATH=${IDIR}/lib ; export BINARY_PATH=${IDIR}/lib ;
              make -f win32/Makefile.gcc install ; cd ../../../
      - name: build metis
        run: git clone https://github.com/coin-or-tools/ThirdParty-Metis.git ; cd ThirdParty-Metis ; ./get.Metis ; 
             export IDIR=/d/a/prog/ ;
             export CFLAGS="-O3 -DNDEBUG -flto -fPIC" ; export LDFLAGS="-flto" ; 
             ./configure --prefix=${IDIR} --disable-shared --enable-static ; make -j 2 ; make install ; cd ..
      - name: blas
        run: export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Blas.git ; cd ThirdParty-Blas ; ./get.Blas ; 
             export FFLAGS="-O3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared ;
             make -j 2 ; make install ; ln -s $IDIR/lib/libcoinblas.a $IDIR/lib/libblas.a ;
             ln -s $IDIR/lib/libcoinblas.la $IDIR/lib/libblas.la ; 
             ln -s $IDIR/lib/pkgconfig/coinblas.pc $IDIR/lib/pkgconfig/blas.pc
      - name: lapack
        run: export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Lapack.git ; cd ThirdParty-Lapack/ ; ./get.Lapack ; 
             export FFLAGS="-O3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared ;
             make -j 2 ; make install ; ln -s $IDIR/lib/libcoinlapack.a $IDIR/lib/liblapack.a ;
             ln -s $IDIR/lib/libcoinlapack.la $IDIR/lib/liblapack.la ;
             ln -s $IDIR/lib/pkgconfig/coinlapack.pc $IDIR/lib/pkgconfig/lapack.pc
      - name: get coinbrew
        run: wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew ; chmod u+x ./coinbrew
      - name: fetching Cbc with coinbrew
        run: ./coinbrew fetch Cbc@master ; ls -l
      - name: Build Cbc with coinbrew
        run: ls -l /d/a/prog/lib/ ; export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran -flto -L/d/a/prog/lib/" ; 
             export CXXFLAGS="-O3 -DNDEBUG -flto -I/d/a/prog/include/coin-or/ -fprefetch-loop-arrays" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/d/a/prog/lib/pkgconfig ; ./coinbrew build Cbc@master --host=x86_64-w64-mingw32 --without-glpk --without-asl --without-mumps --without-bz2
             --with-nauty-cflags="-I/d/a/prog/include/" --with-nauty-lflags="-L/d/a/prog/lib/ -lnauty"
                                         --enable-cbc-parallel --disable-shared --enable-static --tests none --verbosity=4 --prefix=/d/a/prog/
      - name: Build shared library
        run:  export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/d/a/prog/lib/pkgconfig ; x86_64-w64-mingw32-g++ -shared -o /d/a/prog/lib/cbc-c-windows-x86-64.dll
                        `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -O3 -DNDEBUG  -DCBC_THREAD -flto -I/d/a/prog/include/coin-or/ -fprefetch-loop-arrays
                        /d/a/cbc-binaries/cbc-binaries/Cbc/src/Cbc_C_Interface.cpp
                        `pkg-config --libs cbc cgl osi-clp clp osi coinutils`
      - name: Check dependencies cbc
        run: ntldd /d/a/prog/bin/cbc.exe
      - name: Check dependencies cbc library
        run: ntldd /d/a/prog/lib/cbc-c-windows-x86-64.dll
      - name: Check dependencies pthread
        run: ntldd /mingw64/bin/libwinpthread-1.dll
      - name: Check dependencies bzip2
        run: ntldd /mingw64/bin/libbz2-1.dll
      - name: Build shared dir and copy dependency
        run: mkdir -p /d/a/prog/shared/ ; cp /mingw64/bin/libbz2-1.dll /d/a/prog/shared/ ; cp /mingw64/bin/libwinpthread-1.dll /d/a/prog/shared/ ; cp /d/a/prog/lib/cbc-c-windows-x86-64.dll /d/a/prog/shared/ ; cp /mingw64/bin/libgcc_s_seh-1.dll /d/a/prog/shared/ ; cp /mingw64/bin/libstdc++-6.dll /d/a/prog/shared/
      - uses: actions/upload-artifact@v2
        with:
          name: cbc-c-windows-x86-64
          path: d:\a\prog\shared\
