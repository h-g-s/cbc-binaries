name: C/C++ CI

on: 
  push:
  pull_request:

jobs:
  macos-static-build:
    runs-on: macos-10.15
    steps:
    - name: Install pkg-config dependency
      run: brew install pkg-config;
           export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${HOME}/prog/lib/pkgconfig
    - name: Update bash
      run: brew install bash
    - name: Fecth CoinBrew
      run: wget -nH https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew;
           chmod u+x coinbrew;
           ./coinbrew fetch Cbc:${GITHUB_REF##*/} --no-prompt
    - name: Set environment variables (for building CBC)
      run: export OSX_VERSION="10.9"; 
           export MACOSX_DEPLOYMENT_TARGET="10.9";
           export CFLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math -mmacosx-version-min=10.9 -static";
           export CXXFLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -static";
           export F77FLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math"; export LDFLAGS="-fPIC -O3 -DNDEBUG -ffast-math";
           export DYLD_LIBRARY_PATH="${HOME}/prog/lib:${DYLD_LIBRARY_PATH}";
    - name: Build static CBC using CoinBrew
      run: sudo ./coinbrew build --prefix=${HOME}/prog Cbc:${GITHUB_REF##*/} 
                                 --without-asl --without-mumps 
                                 --disable-shared --enable-static --enable-cbc-parallel 
                                 --no-prompt --verbosity=4 --parallel-jobs=2 --tests none
    - name: Build shared library for C Interface
      run: ls ${HOME}/prog/lib ; sudo clang++ -shared ${CXXFLAGS} -o ${HOME}/prog/lib/cbc-c-darwin-x86-64.dylib
                        -I${HOME}/prog/include/coin-or/ -I${HOME}/prog/include/coin/ -L${HOME}/prog/lib
                        ./Cbc/src/Cbc_C_Interface.cpp
                        -lCbc -lCgl -lOsiClp -lClp -lOsi -lCoinUtils -lOsiCbc
                        -lbz2 -lz -llapack -lreadline -lm
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: cbc-darwin-x86-64
    #     path: /Users/runner/prog
    - uses: actions/upload-artifact@v2
      with:
        name: cbc-c-darwin-x86-64
        path: /Users/runner/prog/lib/cbc-c-darwin-x86-64.dylib

  ubuntu-bionic-static-build-debug-asan:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: download GCC 10.1 with static libraries
        run: cd /opt ; wget -nH www.decom.ufop.br/haroldo/files/gcc-xenial-x86-64.tar.xz ; tar Jxf gcc-xenial-x86-64.tar.xz 
      - name: build nauty
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/; cd deps/nauty ;  g++ --version ;
             export CFLAGS="-Og -g3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared --enable-generic ; 
             make -j 2 ;  mkdir -p ${IDIR}/include ; mkdir -p ${IDIR}/include/nauty ;
             mkdir -p ${IDIR}/lib ; cp *.h ${IDIR}/include/nauty/ ; cp *.a ${IDIR}/lib/ ; cp nauty.a ${IDIR}/lib/libnauty.a ; cd ../../
      - name: build zlib
        run:  export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/ ; export CFLAGS="-Og -g3 -fPIC" ;
              cd deps/zlib/zlib-1.2.11/ ; ./configure --prefix=${IDIR} --static ; make -j 2 ; make install ; cd ../../../
              #      - name: build blas
              # run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/; 
              # cd deps/blas/ ; libtoolize ; automake -a ; aclocal ; ./configure --prefix=${IDIR} --enable-static ; make -j 2 ; make install ; cd ../../
      - name: build bz2
        run:  export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/ ; 
              cd deps/bzip2-1.0.8/ ; make libbz2.a ; make -j 2 ;  
              cp libbz2.a ${IDIR}/lib ; cp *.h ${IDIR}/include/ ; cd ../../
      - name: build metis
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Metis.git ; cd ThirdParty-Metis ; ./get.Metis ; 
             export CFLAGS="-Og -g3 -fPIC" ; export LDFLAGS="" ; 
             ./configure --prefix=${IDIR} --disable-shared --enable-static ; make -j 2 ; make install ; cd ..
      - name: install libsuitesparse
        run: sudo apt-get install libsuitesparse-dev ;
             sudo rm -rf /usr/lib/x86_64-linux-gnu/libamd*.so* ;
             sudo rm -rf /usr/lib/x86_64-linux-gnu/libblas*.so* ;
             sudo rm -rf /usr/lib/x86_64-linux-gnu/liblapack*.so* ;
             sudo rm -rf /usr/lib/x86_64-linux-gnu/libcolamd*.so* ;
             sudo rm -rf /usr/lib/x86_64-linux-gnu/libccolamd*.so* ;
             sudo rm -rf /usr/lib/x86_64-linux-gnu/libcholmod*.so* ; 
             sudo rm -rf /usr/lib/x86_64-linux-gnu/libcxsparse*.so* ; 
             sudo rm -rf /usr/lib/x86_64-linux-gnu/libklu*.so* ;
      - name: get coinbrew
        run: wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew ; chmod u+x ./coinbrew
      - name: Build Cbc with coinbrew
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;
             ls -l ${IDIR}/lib/ ; 
             sudo apt-get remove --yes libreadline-dev ;
             export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran  -L${IDIR}/lib/" ; 
             export CXXFLAGS="-Og -g3 -fsanitize=address -I${IDIR}/include/ -I${IDIR}/include/coin-or/ -fPIC" ; 
             export LDFLAGS="-lasan" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; 
             ./coinbrew build Cbc@master --without-glpk --without-asl --without-mumps --without-data --with-nauty-cflags="-I${IDIR}/include/" --with-nauty-lflags="-L${IDIR}/lib/ -lnauty" --with-zlib-cflags="-I${IDIR}/include/" --with-zlib-lflags="-L${IDIR}/lib/ -lzlib" --disable-shared --enable-static --enable-cbc-parallel --tests none --verbosity=4 --prefix=${IDIR}/
      - name: Build shared library
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/; export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; 
             g++ -shared -o ${IDIR}/lib/cbc-c-linux-x86-64.so
             `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -fPIC -fsanitize=address -Og -g3 -DCBC_THREAD -I${IDIR}/include/coin-or/ 
                        /home/runner/work/cbc-binaries/cbc-binaries/Cbc/src/Cbc_C_Interface.cpp
                        `pkg-config --libs cbc cgl osi-clp clp osi coinutils`
      - name: Build c-interface-solver
        run: wget -nH https://raw.githubusercontent.com/h-g-s/cbc-tests/master/tests/c-interface-solver.c ;
             export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;
             ls -l ${IDIR}/lib/ ; export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran -lasan -L${IDIR}/lib/" ; 
             export CXXFLAGS="-Og -g3 -fsanitize=address -I${IDIR}/include/ -I${IDIR}/include/coin-or/" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; 
             g++ -o ${IDIR}/bin/c-interface-solver `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -fPIC -fsanitize=address -Og -g3 -DCBC_THREAD -I${IDIR}/include/coin-or/ c-interface-solver.c `pkg-config --libs cbc cgl osi-clp clp osi coinutils` -lasan -ldl -lpthread ;
             ls ${IDIR}/bin/ -l ;
      - uses: actions/upload-artifact@v2
        with:
          name: cbc-c-linux-x86-64-dbg-asan
          path: /home/runner/prog/lib/cbc-c-linux-x86-64.so
      - uses: actions/upload-artifact@v2
        with:
          name: cbc-bin-linux-x86-64-dbg-asan
          path: /home/runner/prog/bin/cbc
      - uses: actions/upload-artifact@v2
        with:
          name: c-interface-solver-linux-x86-64-dbg-asan
          path: /home/runner/prog/bin/c-interface-solver


  ubuntu-bionic-static-build-debug:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: download GCC 10.1 with static libraries
        run: cd /opt ; wget -nH www.decom.ufop.br/haroldo/files/gcc-xenial-x86-64.tar.xz ; tar Jxf gcc-xenial-x86-64.tar.xz ;
             export PATH=/opt/gcc/bin/:$PATH ; gcc --version
      - name: build nauty
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/; cd deps/nauty ;  g++ --version ;
             export CFLAGS="-Og -g3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared --enable-generic ; 
             make -j 2 ;  mkdir -p ${IDIR}/include ; mkdir -p ${IDIR}/include/nauty ;
             mkdir -p ${IDIR}/lib ; cp *.h ${IDIR}/include/nauty/ ; cp *.a ${IDIR}/lib/ ; cp nauty.a ${IDIR}/lib/libnauty.a ; cd ../../
      - name: build zlib
        run:  export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/ ; export CFLAGS="-Og -g3 -fPIC" ;
              cd deps/zlib/zlib-1.2.11/ ; ./configure --prefix=${IDIR} --static ; make -j 2 ; make install ; cd ../../../
      - name: build bz2
        run:  export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/ ; 
              cd deps/bzip2-1.0.8/ ; make libbz2.a ; make -j 2 ;  
              cp libbz2.a ${IDIR}/lib ; cp *.h ${IDIR}/include/ ; cd ../../
      - name: build metis
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Metis.git ; cd ThirdParty-Metis ; ./get.Metis ; 
             export CFLAGS="-Og -g3 -fPIC" ; export LDFLAGS="" ; 
             ./configure --prefix=${IDIR} --disable-shared --enable-static ; make -j 2 ; make install ; cd ..
      - name: blas
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Blas.git ; cd ThirdParty-Blas ; ./get.Blas ; 
             export FFLAGS="-Og -g3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared ;
             make -j 2 ; make install ; ln -s $IDIR/lib/libcoinblas.a $IDIR/lib/libblas.a ;
             ln -s $IDIR/lib/libcoinblas.la $IDIR/lib/libblas.la ; 
             ln -s $IDIR/lib/pkgconfig/coinblas.pc $IDIR/lib/pkgconfig/blas.pc
      - name: lapack
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Lapack.git ; cd ThirdParty-Lapack/ ; ./get.Lapack ; 
             export FFLAGS="-Og -g3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared ;
             make -j 2 ; make install ; ln -s $IDIR/lib/libcoinlapack.a $IDIR/lib/liblapack.a ;
             ln -s $IDIR/lib/libcoinlapack.la $IDIR/lib/liblapack.la ;
             ln -s $IDIR/lib/pkgconfig/coinlapack.pc $IDIR/lib/pkgconfig/lapack.pc
      - name: get coinbrew
        run: wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew ; chmod u+x ./coinbrew
      - name: Build Cbc with coinbrew
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;
             ls -l ${IDIR}/lib/ ; export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran  -L${IDIR}/lib/" ; 
             export CXXFLAGS="-Og -g3   -I${IDIR}/include/ -I${IDIR}/include/coin-or/" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; ./coinbrew build Cbc@master --without-glpk --without-asl --without-mumps 
             --with-nauty-cflags="-I${IDIR}/include/" --with-nauty-lflags="-L${IDIR}/lib/ -lnauty"
             --disable-shared --enable-static --enable-cbc-parallel --tests none --verbosity=4 --prefix=${IDIR}/
      - name: Build shared library
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/; export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; 
             g++ -shared -o ${IDIR}/lib/cbc-c-linux-x86-64.so
             `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -fPIC -Og -g3 -DCBC_THREAD -I${IDIR}/include/coin-or/ 
                        /home/runner/work/cbc-binaries/cbc-binaries/Cbc/src/Cbc_C_Interface.cpp
                        `pkg-config --libs cbc cgl osi-clp clp osi coinutils`
      - name: Build c-interface-solver
        run: wget -nH https://raw.githubusercontent.com/h-g-s/cbc-tests/master/tests/c-interface-solver.c ;
             export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;
             ls -l ${IDIR}/lib/ ; export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran -L${IDIR}/lib/" ; 
             export CXXFLAGS="-Og -g3 -I${IDIR}/include/ -I${IDIR}/include/coin-or/" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; 
             g++ -o ${IDIR}/bin/c-interface-solver `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -fPIC -Og -g3 -DCBC_THREAD -I${IDIR}/include/coin-or/ c-interface-solver.c `pkg-config --libs cbc cgl osi-clp clp osi coinutils` -ldl -lpthread ;
             ls ${IDIR}/bin/ -l ;
      - uses: actions/upload-artifact@v2
        with:
          name: cbc-c-linux-x86-64-dbg
          path: /home/runner/prog/lib/cbc-c-linux-x86-64.so
      - uses: actions/upload-artifact@v2
        with:
          name: cbc-bin-linux-x86-64-dbg
          path: /home/runner/prog/bin/cbc
      - uses: actions/upload-artifact@v2
        with:
          name: c-interface-solver-linux-x86-64-dbg
          path: /home/runner/prog/bin/c-interface-solver



  ubuntu-bionic-static-build-release:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: download GCC 10.1 with static libraries
        run: cd /opt ; wget -nH www.decom.ufop.br/haroldo/files/gcc-xenial-x86-64.tar.xz ; tar Jxf gcc-xenial-x86-64.tar.xz 
      - name: build nauty
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/; cd deps/nauty ;  g++ --version ;
             export CFLAGS="-O3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared --enable-generic ; 
             make -j 2 ;  mkdir -p ${IDIR}/include ; mkdir -p ${IDIR}/include/nauty ;
             mkdir -p ${IDIR}/lib ; cp *.h ${IDIR}/include/nauty/ ; cp *.a ${IDIR}/lib/ ; cp nauty.a ${IDIR}/lib/libnauty.a ; cd ../../
      - name: build zlib
        run:  export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/ ; export CFLAGS="-O3 -fPIC" ;
              cd deps/zlib/zlib-1.2.11/ ; ./configure --prefix=${IDIR} --static ; make -j 2 ; make install ; cd ../../../
              #      - name: build blas
      - name: build bz2
        run:  export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/ ; 
              cd deps/bzip2-1.0.8/ ; make libbz2.a ; make -j 2 ;  
              cp libbz2.a ${IDIR}/lib ; cp *.h ${IDIR}/include/ ; cd ../../
              # run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/; 
              # cd deps/blas/ ; libtoolize ; automake -a ; aclocal ; ./configure --prefix=${IDIR} --enable-static ; make -j 2 ; make install ; cd ../../
      - name: build metis
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Metis.git ; cd ThirdParty-Metis ; ./get.Metis ; 
             export CFLAGS="-O3 -fPIC -DNDEBUG" ; export LDFLAGS="" ; 
             ./configure --prefix=${IDIR} --disable-shared --enable-static ; make -j 2 ; make install ; cd ..
      - name: blas
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Blas.git ; cd ThirdParty-Blas ; ./get.Blas ; 
             export FFLAGS="-O3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared ;
             make -j 2 ; make install ; ln -s $IDIR/lib/libcoinblas.a $IDIR/lib/libblas.a ;
             ln -s $IDIR/lib/libcoinblas.la $IDIR/lib/libblas.la ; 
             ln -s $IDIR/lib/pkgconfig/coinblas.pc $IDIR/lib/pkgconfig/blas.pc
      - name: lapack
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Lapack.git ; cd ThirdParty-Lapack/ ; ./get.Lapack ; 
             export FFLAGS="-O3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared ;
             make -j 2 ; make install ; ln -s $IDIR/lib/libcoinlapack.a $IDIR/lib/liblapack.a ;
             ln -s $IDIR/lib/libcoinlapack.la $IDIR/lib/liblapack.la ;
             ln -s $IDIR/lib/pkgconfig/coinlapack.pc $IDIR/lib/pkgconfig/lapack.pc
      # - name: build suitesparte
             # run: git clone https://github.com/DrTimothyAldenDavis/SuiteSparse.git ;
             # export PATH=/opt/gcc/bin/:$PATH ; cd SuiteSparse ; export IDIR=/home/runner/prog/ ; export LD_LIBRARY_PATH=${IDIR}/lib/:$LD_LIBRARY_PATH ; make AMD CHOLMOD CAMD COLAMD ; make INSTALL=${IDIR} ; ls ${IDIR}/lib/ ; rm ${IDIR}/lib/*.so*
      - name: get coinbrew
        run: wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew ; chmod u+x ./coinbrew
      - name: Build Cbc with coinbrew
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;
             ls -l ${IDIR}/lib/ ; 
             sudo apt-get remove --yes libreadline-dev ;
             export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran  -L${IDIR}/lib/" ; 
             export CXXFLAGS="-O3 -DNDEBUG  -I${IDIR}/include/ -I${IDIR}/include/coin-or/ -fprefetch-loop-arrays" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; 
             echo "running ./coinbrew build Cbc@master --without-glpk --without-asl --without-mumps --with-nauty-cflags=-I${IDIR}/include/ --with-nauty-lflags=-L${IDIR}/lib/ -lnauty -L/usr/lib/x86_64-linux-gnu/ --disable-shared --enable-static --enable-cbc-parallel --tests none --verbosity=4 --prefix=${IDIR}/" ;
             ./coinbrew build Cbc@master --without-glpk --without-asl --without-mumps --disable-shared --enable-static --enable-cbc-parallel --tests none --verbosity=4 --prefix=${IDIR}/ --with-nauty-cflags="-I${IDIR}/include/" --with-nauty-lflags="-L${IDIR}/lib/ -lnauty -L/usr/lib/x86_64-linux-gnu/"
      - name: Build shared library
        run: export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/; export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; 
             g++ -shared -o ${IDIR}/lib/cbc-c-linux-x86-64.so
             `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -fPIC -O3 -DNDEBUG  -DCBC_THREAD -I${IDIR}/include/coin-or/ -fprefetch-loop-arrays
                        /home/runner/work/cbc-binaries/cbc-binaries/Cbc/src/Cbc_C_Interface.cpp
                        `pkg-config --libs cbc cgl osi-clp clp osi coinutils`
      - uses: actions/upload-artifact@v2
        with:
          name: cbc-c-linux-x86-64
          path: /home/runner/prog/lib/cbc-c-linux-x86-64.so
      - name: Build c-interface-solver
        run: wget -nH https://raw.githubusercontent.com/h-g-s/cbc-tests/master/tests/c-interface-solver.c ;
             export PATH=/opt/gcc/bin/:$PATH ; export IDIR=/home/runner/prog/;
             ls -l ${IDIR}/lib/ ; export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran -L${IDIR}/lib/" ; 
             export CXXFLAGS="-O3 -DNDEBUG -I${IDIR}/include/ -I${IDIR}/include/coin-or/" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${IDIR}/lib/pkgconfig ; 
             g++ -o ${IDIR}/bin/c-interface-solver `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -fPIC -O3 -DNDEBUG -DCBC_THREAD -I${IDIR}/include/coin-or/ c-interface-solver.c `pkg-config --libs cbc cgl osi-clp clp osi coinutils` -ldl -lpthread ;
             ls -l ${IDIR}/bin/ ;
      - uses: actions/upload-artifact@v2
        with:
          name: c-interface-solver-linux-x86-64
          path: /home/runner/prog/bin/c-interface-solver

  windows-build:
    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git base-devel gcc mingw-w64-x86_64-winpthreads-git mingw-w64-x86_64-toolchain mingw-w64-x86_64-ntldd tar
      - name: create install dir
        run: mkdir -p /d/a/prog/ ; mkdir -p /d/a/prog/include ; mkdir -p /d/a/prog/lib
      - name: copy pthread static
        run: cp /mingw64/lib/libwinpthread.a /d/a/prog/lib
      - name: install nauty
        run: cd deps/nauty ; export CFLAGS="-O3 -fPIC -flto" ; export LDFLAGS="-O3 -fPIC -flto" ; 
             export IDIR=/d/a/prog/ ;
             ./configure --host=x86_64-w64-mingw32 --prefix=$IDIR --enable-static --disable-shared --enable-generic ; 
             make -j 2 ; mkdir -p /d/a/prog/include/nauty ;
             cp *.h /d/a/prog/include/nauty/ ; cp *.a /d/a/prog/lib/ ; cp nauty.a /d/a/prog/lib/libnauty.a ; cd ../../
      - name: build zlib
        run:  cd deps/zlib/zlib-1.2.11/ ; export CFLAGS="-O3 -fPIC -flto" ; export LDFLAGS="-O3 -fPIC -flto" ;
              export IDIR=/d/a/prog/ ; 
              make -f win32/Makefile.gcc -j 2 ; find ./ | grep libz.a ; 
              export INCLUDE_PATH=${IDIR}/include ;export LIBRARY_PATH=${IDIR}/lib ; export BINARY_PATH=${IDIR}/lib ;
              make -f win32/Makefile.gcc install ; cd ../../../
      - name: build metis
        run: git clone https://github.com/coin-or-tools/ThirdParty-Metis.git ; cd ThirdParty-Metis ; ./get.Metis ; 
             export IDIR=/d/a/prog/ ;
             export CFLAGS="-O3 -DNDEBUG -flto -fPIC" ; export LDFLAGS="-flto" ; 
             ./configure --prefix=${IDIR} --disable-shared --enable-static ; make -j 2 ; make install ; cd ..
      - name: blas
        run: export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Blas.git ; cd ThirdParty-Blas ; ./get.Blas ; 
             export FFLAGS="-O3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared ;
             make -j 2 ; make install ; ln -s $IDIR/lib/libcoinblas.a $IDIR/lib/libblas.a ;
             ln -s $IDIR/lib/libcoinblas.la $IDIR/lib/libblas.la ; 
             ln -s $IDIR/lib/pkgconfig/coinblas.pc $IDIR/lib/pkgconfig/blas.pc
      - name: lapack
        run: export IDIR=/home/runner/prog/;  
             git clone https://github.com/coin-or-tools/ThirdParty-Lapack.git ; cd ThirdParty-Lapack/ ; ./get.Lapack ; 
             export FFLAGS="-O3 -fPIC" ; ./configure --prefix=$IDIR --enable-static --disable-shared ;
             make -j 2 ; make install ; ln -s $IDIR/lib/libcoinlapack.a $IDIR/lib/liblapack.a ;
             ln -s $IDIR/lib/libcoinlapack.la $IDIR/lib/liblapack.la ;
             ln -s $IDIR/lib/pkgconfig/coinlapack.pc $IDIR/lib/pkgconfig/lapack.pc
      - name: get coinbrew
        run: wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew ; chmod u+x ./coinbrew
      - name: fetching Cbc with coinbrew
        run: ./coinbrew fetch Cbc@master ; ls -l
      - name: Build Cbc with coinbrew
        run: ls -l /d/a/prog/lib/ ; export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran -flto -L/d/a/prog/lib/" ; 
             export CXXFLAGS="-O3 -DNDEBUG -flto -I/d/a/prog/include/coin-or/ -fprefetch-loop-arrays" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/d/a/prog/lib/pkgconfig ; ./coinbrew build Cbc@master --host=x86_64-w64-mingw32 --without-glpk --without-asl --without-mumps --without-bz2
             --with-nauty-cflags="-I/d/a/prog/include/" --with-nauty-lflags="-L/d/a/prog/lib/ -lnauty"
                                         --enable-cbc-parallel --disable-shared --enable-static --tests none --verbosity=4 --prefix=/d/a/prog/
      - name: Build shared library
        run:  export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/d/a/prog/lib/pkgconfig ; x86_64-w64-mingw32-g++ -shared -o /d/a/prog/lib/cbc-c-windows-x86-64.dll
                        `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -O3 -DNDEBUG  -DCBC_THREAD -flto -I/d/a/prog/include/coin-or/ -fprefetch-loop-arrays
                        /d/a/cbc-binaries/cbc-binaries/Cbc/src/Cbc_C_Interface.cpp
                        `pkg-config --libs cbc cgl osi-clp clp osi coinutils`
      - name: Check dependencies cbc
        run: ntldd /d/a/prog/bin/cbc.exe
      - name: Check dependencies cbc library
        run: ntldd /d/a/prog/lib/cbc-c-windows-x86-64.dll
      - name: Check dependencies pthread
        run: ntldd /mingw64/bin/libwinpthread-1.dll
      - name: Check dependencies bzip2
        run: ntldd /mingw64/bin/libbz2-1.dll
      - name: Build shared dir and copy dependency
        run: mkdir -p /d/a/prog/shared/ ; cp /mingw64/bin/libbz2-1.dll /d/a/prog/shared/ ; cp /mingw64/bin/libwinpthread-1.dll /d/a/prog/shared/ ; cp /d/a/prog/lib/cbc-c-windows-x86-64.dll /d/a/prog/shared/ ; cp /mingw64/bin/libgcc_s_seh-1.dll /d/a/prog/shared/ ; cp /mingw64/bin/libstdc++-6.dll /d/a/prog/shared/
      - uses: actions/upload-artifact@v2
        with:
          name: cbc-c-windows-x86-64
          path: d:\a\prog\shared\
