name: C/C++ CI

on: 
  push:
  pull_request:

jobs:
  macos-static-build:
    runs-on: macos-latest
    steps:
    - name: Install pkg-config dependency
      run: brew install pkg-config;
           export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:${HOME}/prog/lib/pkgconfig
    - name: Update bash
      run: brew install bash
    - name: Fecth CoinBrew
      run: wget -nH https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew;
           chmod u+x coinbrew;
           ./coinbrew fetch Cbc:${GITHUB_REF##*/} --no-prompt
    - name: Set environment variables (for building CBC)
      run: export OSX_VERSION="10.9"; 
           export MACOSX_DEPLOYMENT_TARGET="10.9";
           export CFLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math -mmacosx-version-min=10.9 -static";
           export CXXFLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math -std=c++11 -stdlib=libc++ -mmacosx-version-min=10.9 -static";
           export F77FLAGS="-fPIC -O3 -DNDEBUG -DCBC_THREAD -ffast-math"; export LDFLAGS="-fPIC -O3 -DNDEBUG -ffast-math";
           export DYLD_LIBRARY_PATH="${HOME}/prog/lib:${DYLD_LIBRARY_PATH}";
    - name: Build static CBC using CoinBrew
      run: sudo ./coinbrew build --prefix=${HOME}/prog Cbc:${GITHUB_REF##*/} 
                                 --without-asl --without-mumps 
                                 --disable-shared --enable-static --enable-cbc-parallel 
                                 --no-prompt --verbosity=4 --parallel-jobs=2 --tests none
    - name: Build shared library for C Interface
      run: sudo clang++ -shared ${CXXFLAGS} -o ${HOME}/prog/lib/cbc-c-darwin-x86-64.dylib
                        -I${HOME}/prog/include/coin-or/ -I${HOME}/prog/include/coin/ -L${HOME}/prog/lib
                        ./Cbc/src/Cbc_C_Interface.cpp
                        -lCbcSolver -lCbc -lCgl -lOsiClp -lClpSolver -lClp -lOsi -lCoinUtils -lCoinGlpk -lOsiCbc
                        -lbz2 -lz -llapack -lreadline -lm
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: cbc-darwin-x86-64
    #     path: /Users/runner/prog
    - uses: actions/upload-artifact@v2
      with:
        name: cbc-c-darwin-x86-64
        path: /Users/runner/prog/lib/cbc-c-darwin-x86-64.dylib

  ubuntu-bionic-static-build:
    runs-on: ubuntu-18.04
    steps:
    - name: announce
      run: echo "Building CBC branch ${GITHUB_REF##*/}"
    - name: dependencies
      run: sudo add-apt-repository ppa:ubuntu-toolchain-r/test ; sudo apt-get update ; sudo apt-get install libc6-dev libbz2-dev zlib1g-dev liblapack-dev libnauty2-dev libopenblas-base libopenblas-dev libmumps-dev
    - name: download gcc with only static libraries
      run: cd ~ ; wget -nH http://www.decom.ufop.br/haroldo/files/gcc-9.3-bionic-static.tar.xz ; cd  / ; sudo tar Jxf  /home/runner/gcc-9.3-bionic-static.tar.xz ; export PATH=/opt/gcc-9.3/bin:$PATH ; sudo ln -s /opt/gcc-9.3/bin/g++-9.3 /opt/gcc-9.3/bin/g++ ; sudo ln -s /opt/gcc-9.3/bin/gcc-9.3 /opt/gcc-9.3/bin/gcc ; sudo ln -s /opt/gcc-9.3/bin/cpp-9.3 /opt/gcc-9.3/bin/cpp ; sudo ln -s /opt/gcc-9.3/bin/gfortran-9.3 /opt/gcc-9.3/bin/gfortran  ; sudo ln -s /opt/gcc-9.3/bin/gcc-ar-9.3 /opt/gcc-9.3/bin/gcc-ar ; sudo ln -s /opt/gcc-9.3/bin/gcc-nm-9.3 /opt/gcc-9.3/bin/gcc-nm ; sudo ln -s /opt/gcc-9.3/bin/gcc-ranlib-9.3 /opt/gcc-9.3/bin/gcc-ranlib
    - name: CoinBrew fetch
      run: wget -nH https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew  ; chmod u+x coinbrew ; ./coinbrew fetch Cbc:${GITHUB_REF##*/} --no-prompt
      #- name: Separate static libraries
      # run: mkdir ~/static ; cp /usr/lib/x86_64-linux-gnu/*.a ~/static/ ;  ls ~/static/ ; sudo rm /usr/lib/x86_64-linux-gnu/libnauty*.so /usr/lib/x86_64-linux-gnu/libblas.so.3 /usr/lib/x86_64-linux-gnu/libamd.so.2 /usr/lib/x86_64-linux-gnu/libmetis.so.5 /usr/lib/x86_64-linux-gnu/libamd.so /usr/lib/x86_64-linux-gnu/libbtf.so /usr/lib/x86_64-linux-gnu/libcamd.so /usr/lib/x86_64-linux-gnu/libccolamd.so /usr/lib/x86_64-linux-gnu/libcholmod.so /usr/lib/x86_64-linux-gnu/libcolamd.so /usr/lib/x86_64-linux-gnu/libcxsparse.so /usr/lib/x86_64-linux-gnu/libgraphblas.so /usr/lib/x86_64-linux-gnu/libklu.so /usr/lib/x86_64-linux-gnu/libldl.so /usr/lib/x86_64-linux-gnu/librbio.so /usr/lib/x86_64-linux-gnu/libspqr.so  /usr/lib/x86_64-linux-gnu/libumfpack.so -f   ; sudo ldconfig
    - name: Remove some shared libraries
      run: sudo rm /usr/lib/x86_64-linux-gnu/libnauty*.so
    - name: add static libraries to gcc directory
      run: sudo cp /usr/lib/x86_64-linux-gnu/*.a /opt/gcc-9.3/lib64/
    - name: CBC Static build
      run: export CXXFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran" ; export FFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran" ; export F77LAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran" ; export LIBRARY_PATH="/opt/gcc-9.3/lib64/:/home/runner/static/:/usr/lib/x86_64-linux-gnu/" ; ./coinbrew build --prefix=/home/runner/prog Cbc:${GITHUB_REF##*/} --without-mumps --without-asl --no-prompt --verbosity=4 --disable-shared --enable-static --enable-cbc-parallel --parallel-jobs=2 --tests none
    - name: Build shared library for C Interface
      run: g++ -shared -O3 -fPIC -o /home/runner/prog/lib/cbc-c-linux-x86-64.so -I/home/runner/prog/include/coin-or/ -L/home/runner/prog/lib/ -DCBC_THREAD ./Cbc/src/Cbc_C_Interface.cpp -lCbcSolver -lCbc -lpthread -lrt -lCgl -lOsiClp -lClpSolver -lClp -lOsi -lCoinUtils -lquadmath -lm -static-libgcc -static-libstdc++ -static-libgfortran -lcoinglpk
    # ; export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/home/runner/prog/lib/pkgconfig/ ; g++ `pkg-config --cflags --libs CbcSolver Cbc Cgl OsiClp ClpSolver Clp Osi CoinUtils` Cbc/src/Cbc_C_Interface.cpp -shared -O3 -fPIC -o /home/runner/prog/lib/cbc-c-linux-x86-64.so
    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: cbc-x86-64-linux-gcc9
    #     path: /home/runner/prog/
    - uses: actions/upload-artifact@v2
      with:
        name: cbc-c-linux-x86-64
        path: /home/runner/prog/lib/cbc-c-linux-x86-64.so

  windows-build:
    runs-on: windows-2016
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v1
        with:
          msystem: MINGW64
          update: true
          install: git base-devel gcc mingw-w64-x86_64-winpthreads-git mingw-w64-x86_64-toolchain
      - name: create install dir
        run: mkdir -p /d/a/prog/ ; mkdir -p /d/a/prog/include
      - name: install nauty
        run: cd deps/nauty ; ./configure --host=x86_64-w64-mingw32 --prefix=/mingw64 --enable-static --disable-shared  ; make -j 2 ; mkdir -p /d/a/prog/include/nauty ;
             cp *.h /d/a/prog/include/nauty/ ; cp *.a /d/a/prog/lib/ ; cp nauty.a /d/a/prog/lib/libnauty.a ; cd ../../
      - name: build metis
        run: git clone https://github.com/coin-or-tools/ThirdParty-Metis.git ; cd ThirdParty-Metis ; ./get.Metis ; 
             export CFLAGS="-O3 -DNDEBUG -flto" ; export LDFLAGS="-flto" ; 
             ./configure --prefix=/d/a/prog/ --disable-shared --enable-static ; make -j 2 ; make install ; cd ..
      - name: build blas
        run: cd deps/blas/ ; ./configure --host=x86_64-w64-mingw32 --prefix=/d/a/prog/ --enable-static ; make -j 2 ; make install ; cd ../../
        #- name: build lapack
        #run: git clone https://github.com/coin-or-tools/ThirdParty-Lapack.git ; cd ThirdParty-Lapack/ ; ./get.Lapack  ;
        #     ./configure --prefix=/d/a/prog/ --disable-shared --enable-static ; make -j 2 ; make install ; cd ..
      - name: get coinbrew
        run: wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew ; chmod u+x ./coinbrew
      - name: fetching Cbc with coinbrew
        run: ./coinbrew fetch Cbc@master ; ls -l
      - name: Build Cbc with coinbrew
        run: ls -l /d/a/prog/lib/ ; export LDFLAGS="-static -static-libgcc -static-libstdc++ -static-libgfortran -flto -L/d/a/prog/lib/" ; 
             export CXXFLAGS="-O3 -DNDEBUG -flto -I/d/a/prog/include/coin-or/ -fprefetch-loop-arrays" ; 
             export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/d/a/prog/lib/pkgconfig ; ./coinbrew build Cbc@master --host=x86_64-w64-mingw32 --without-glpk --without-asl --without-mumps 
             --with-nauty-cflags="-I/d/a/prog/include/" --with-nauty-lflags="/d/a/prog/lib/libnauty.a"
                                         --disable-shared --enable-static --enable-cbc-parallel --tests none --verbosity=4 --prefix=/d/a/prog/
      - name: Build shared library
        run:  export PKG_CONFIG_PATH=${PKG_CONFIG_PATH}:/d/a/prog/lib/pkgconfig ; x86_64-w64-mingw32-g++ -shared -o /d/a/prog/lib/cbc-c-windows-x86-64.dll
                        `pkg-config --cflags cbc cgl osi-clp clp osi coinutils` -O3 -DNDEBUG -flto -I/d/a/prog/include/coin-or/ -fprefetch-loop-arrays
                        /d/a/cbc-binaries/cbc-binaries/Cbc/src/Cbc_C_Interface.cpp
                        `pkg-config --libs cbc cgl osi-clp clp osi coinutils`
      - uses: actions/upload-artifact@v2
        with:
          name: cbc-c-windows-x86-64
          path: d:\a\prog\lib\cbc-c-windows-x86-64.dll
